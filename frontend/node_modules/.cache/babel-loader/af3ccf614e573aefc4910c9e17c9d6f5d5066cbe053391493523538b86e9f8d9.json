{"ast":null,"code":"var _jsxFileName = \"/Users/abdullahahmed/Desktop/resume/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { authAPI } from '../services/api';\n\n// Create the auth context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetchUserProfile();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  // Fetch the user's profile from the API\n  const fetchUserProfile = async () => {\n    try {\n      setLoading(true);\n      const response = await authAPI.getUser();\n      setCurrentUser(response.data);\n      setError(null);\n    } catch (err) {\n      console.error('Error fetching user profile:', err);\n      setError('Failed to fetch user profile');\n      // If the token is invalid, clear it\n      if (err.response && (err.response.status === 401 || err.response.status === 403)) {\n        logout();\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register a new user\n  const register = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await authAPI.register({\n        email,\n        password\n      });\n      return response.data;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Registration error:', err);\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Registration failed';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Log in a user\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await authAPI.login({\n        username: email,\n        // FastAPI OAuth2 expects 'username' field\n        password: password\n      });\n      const {\n        access_token\n      } = response.data;\n      localStorage.setItem('token', access_token);\n\n      // Fetch the user profile after successful login\n      await fetchUserProfile();\n      return true;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Login error:', err);\n      const errorMessage = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.detail) || 'Login failed';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Log out a user\n  const logout = () => {\n    localStorage.removeItem('token');\n    setCurrentUser(null);\n    setError(null);\n  };\n\n  // Clear any auth errors\n  const clearError = () => setError(null);\n\n  // The value object that will be provided to consumers of this context\n  const value = {\n    currentUser,\n    loading,\n    error,\n    register,\n    login,\n    logout,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"JNizP9FwoqjqDhcaQoKbEEqEJbk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","error","setError","token","localStorage","getItem","fetchUserProfile","response","getUser","data","err","console","status","logout","register","email","password","_err$response","_err$response$data","errorMessage","detail","Error","login","username","access_token","setItem","_err$response2","_err$response2$data","removeItem","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abdullahahmed/Desktop/resume/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { authAPI } from '../services/api';\n\n// Create the auth context\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetchUserProfile();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  // Fetch the user's profile from the API\n  const fetchUserProfile = async () => {\n    try {\n      setLoading(true);\n      const response = await authAPI.getUser();\n      setCurrentUser(response.data);\n      setError(null);\n    } catch (err) {\n      console.error('Error fetching user profile:', err);\n      setError('Failed to fetch user profile');\n      // If the token is invalid, clear it\n      if (err.response && (err.response.status === 401 || err.response.status === 403)) {\n        logout();\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register a new user\n  const register = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await authAPI.register({ email, password });\n      return response.data;\n    } catch (err) {\n      console.error('Registration error:', err);\n      const errorMessage = err.response?.data?.detail || 'Registration failed';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Log in a user\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await authAPI.login({\n        username: email, // FastAPI OAuth2 expects 'username' field\n        password: password,\n      });\n      \n      const { access_token } = response.data;\n      localStorage.setItem('token', access_token);\n      \n      // Fetch the user profile after successful login\n      await fetchUserProfile();\n      return true;\n    } catch (err) {\n      console.error('Login error:', err);\n      const errorMessage = err.response?.data?.detail || 'Login failed';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Log out a user\n  const logout = () => {\n    localStorage.removeItem('token');\n    setCurrentUser(null);\n    setError(null);\n  };\n\n  // Clear any auth errors\n  const clearError = () => setError(null);\n\n  // The value object that will be provided to consumers of this context\n  const value = {\n    currentUser,\n    loading,\n    error,\n    register,\n    login,\n    logout,\n    clearError,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}