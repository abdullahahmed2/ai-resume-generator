{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Create an axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to include the auth token in requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Authentication API calls\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/token', new URLSearchParams(credentials), {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  }),\n  getUser: () => api.get('/auth/me')\n};\n\n// Resume API calls\nexport const resumeAPI = {\n  createResume: resumeData => api.post('/resume/create', resumeData),\n  getResumes: (params = {}) => api.get('/resume/list', {\n    params\n  }),\n  getResume: id => api.get(`/resume/${id}`),\n  updateResume: (id, resumeData) => api.put(`/resume/${id}`, resumeData),\n  deleteResume: id => api.delete(`/resume/${id}`),\n  // Version-related endpoints\n  createVersion: versionData => api.post('/resume/version/create', versionData),\n  getVersion: id => api.get(`/resume/version/${id}`),\n  getVersions: (resumeId, params = {}) => api.get(`/resume/versions/${resumeId}`, {\n    params\n  }),\n  downloadPdf: versionId => api.get(`/resume/download/${versionId}`, {\n    responseType: 'blob'\n  })\n};\n\n// Template API calls\nexport const templateAPI = {\n  getTemplates: (params = {}) => api.get('/template/list', {\n    params\n  }),\n  getTemplate: id => api.get(`/template/${id}`)\n};\n\n// AI API calls\nexport const aiAPI = {\n  generateSuggestions: data => api.post('/ai/generate-suggestions', data)\n};\n\n// Share API calls\nexport const shareAPI = {\n  createShareLink: data => api.post('/share/generate', data),\n  getShareLinks: (params = {}) => api.get('/share/list', {\n    params\n  }),\n  deactivateShareLink: id => api.put(`/share/deactivate/${id}`),\n  getSharedResume: token => api.get(`/share/resume/${token}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","authAPI","register","userData","post","login","credentials","URLSearchParams","getUser","get","resumeAPI","createResume","resumeData","getResumes","params","getResume","id","updateResume","put","deleteResume","delete","createVersion","versionData","getVersion","getVersions","resumeId","downloadPdf","versionId","responseType","templateAPI","getTemplates","getTemplate","aiAPI","generateSuggestions","data","shareAPI","createShareLink","getShareLinks","deactivateShareLink","getSharedResume"],"sources":["/Users/abdullahahmed/Desktop/resume/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Create an axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a request interceptor to include the auth token in requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Authentication API calls\nexport const authAPI = {\n  register: (userData) => api.post('/auth/register', userData),\n  login: (credentials) => api.post('/auth/token', new URLSearchParams(credentials), {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n  }),\n  getUser: () => api.get('/auth/me'),\n};\n\n// Resume API calls\nexport const resumeAPI = {\n  createResume: (resumeData) => api.post('/resume/create', resumeData),\n  getResumes: (params = {}) => api.get('/resume/list', { params }),\n  getResume: (id) => api.get(`/resume/${id}`),\n  updateResume: (id, resumeData) => api.put(`/resume/${id}`, resumeData),\n  deleteResume: (id) => api.delete(`/resume/${id}`),\n  \n  // Version-related endpoints\n  createVersion: (versionData) => api.post('/resume/version/create', versionData),\n  getVersion: (id) => api.get(`/resume/version/${id}`),\n  getVersions: (resumeId, params = {}) => api.get(`/resume/versions/${resumeId}`, { params }),\n  downloadPdf: (versionId) => api.get(`/resume/download/${versionId}`, { responseType: 'blob' }),\n};\n\n// Template API calls\nexport const templateAPI = {\n  getTemplates: (params = {}) => api.get('/template/list', { params }),\n  getTemplate: (id) => api.get(`/template/${id}`),\n};\n\n// AI API calls\nexport const aiAPI = {\n  generateSuggestions: (data) => api.post('/ai/generate-suggestions', data),\n};\n\n// Share API calls\nexport const shareAPI = {\n  createShareLink: (data) => api.post('/share/generate', data),\n  getShareLinks: (params = {}) => api.get('/share/list', { params }),\n  deactivateShareLink: (id) => api.put(`/share/deactivate/${id}`),\n  getSharedResume: (token) => api.get(`/share/resume/${token}`),\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}